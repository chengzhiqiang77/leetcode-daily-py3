# _*_ coding = utf-8 _*_
# created by czq on 2021/10/2


# 题目405：
# 给定一个整数，编写一个算法将这个数转换为十六进制数。对于负整数，我们通常使用 补码运算 方法。
#
# 注意:
#
# 十六进制中所有字母(a-f)都必须是小写。
# 十六进制字符串中不能包含多余的前导零。如果要转化的数为0，那么以单个字符'0'来表示；对于其他情况，十六进制字符串中的第一个字符将不会是0字符。
# 给定的数确保在32位有符号整数范围内。
# 不能使用任何由库提供的将数字直接转换或格式化为十六进制的方法。


# 题解1：
# 思路：将num与三十二位的最大十六进制数与运算，然后对这个数依次与运算取到十六进制中对应数字即可


def toHex(self, num: int) -> str:
    if num == 0:
        return "0"
    s = "0123456789abcdef"
    result = []
    num = num & 0xFFFFFFFF
    while num > 0:
        result.append(s[num & 0XF])
        num = num >> 4
    return "".join(result[::-1])
