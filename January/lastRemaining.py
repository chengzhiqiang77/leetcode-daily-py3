# _*_ coding = utf-8 _*_
# created by czq on 2022/1/2


# 题目390：
# 列表 arr 由在范围 [1, n] 中的所有整数组成，并按严格递增排序。请你对 arr 应用下述算法：
#
# 从左到右，删除第一个数字，然后每隔一个数字删除一个，直到到达列表末尾。
# 重复上面的步骤，但这次是从右到左。也就是，删除最右侧的数字，然后剩下的数字每隔一个删除一个。
# 不断重复这两步，从左到右和从右到左交替进行，直到只剩下一个数字。
# 给你整数 n ，返回 arr 最后剩下的数字。


# 题解1：
# 思路：维护数组的第一个数字，当数组的长度为1猴，那么这个数字就是剩下的数字，我们可以发现，当从左往右删除时，这时候第一个数字肯定会变化，
# 变化幅度为当前的步长；当从右往左时，当当前剩余的长度不能被2整除时，第一个数字也变化为当前的步长；


def lastRemaining(self, n: int) -> int:
    head = 1
    step = 1
    left = True
    while n > 1:
        if left or n % 2 == 1:
            head += step
        n //= 2
        step *= 2
        left = not left
    return head
